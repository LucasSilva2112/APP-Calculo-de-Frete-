<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>